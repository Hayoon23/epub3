<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
  <title>1212</title>
  <link href="../Styles/PY_Ebook_Basic_Style.css" type="text/css" rel="stylesheet"/>
</head>

<body>
  <div class="box1 bg1">
    <h2 class="txt2"><span class="dgray1">0</span><span class="dwhite">1 힘 제어</span></h2>
  </div>

  <h3 class="section gothic_b f115" id="sigil_toc_id_59"><span class="txtball dwhite">가</span> 필요성</h3>

  <p class="txt indent1">힘 제어를 사용하면 단순 이동으로는 구현할 수 없는 주변 환경에 능동적으로 대응할 수 있는 다양한 응용이 가능하다. &#60;그림 XII-2&#62; (a)의 폴리싱<span class="bracket">(Polishing)</span>은 그 대표적인 예이다. 폴리싱 공정은 사포 등을 사용하여 울퉁불퉁 표면을 평탄화하는 작업이다. 그 대상은 목재, 석재, 철재, 반도체 등 다양하다. 이 공정은 주변에서 생각보다 자주 볼 수 있는데, 표면의 불순물을 제거할 필요가 있거나 매끈한 표면이 필요한 공정 등에 앞서 많이 적용된다. 이 작업의 기본적인 요소는 고르지 않은 표면에서도 마찰 압력을 일정하게 유지하는 것이다. 또 다른 예로 &#60;그림 XII-2&#62; (b)의 표면을 따라 이동하는 응용이다. 로봇 TCP의 위치 정보를 이용하여 로봇은 표면의 구조를 알 수 있고, 기능을 추가함으로써 대상 물체의 도면 정보까지도 알 수 있을 것이다. 또 다른 예로는 조립 공정을 예로 들 수 있는데, 조립 공정 시 부품 공차 혹은 지그의 위치 변동 등의 환경 요소를 고려하여 정확한 위치보다는 해당 위치에서 적당한 가압 등이 필요한 경우가 있을 수 있다. 또 다른 예로는 제품의 적재 과정에서도 활용할 수 있는데, 전 단계에 적재한 상자의 위치가 부정확함으로 인해서 다음 적재 동작에 영향을 받을 수 있는 상황이라면 이번 단원에서 학습하는 힘 제어는 그 해결책이 될 수 있다. 이 외에도 적용할 수 있는 방법은 사용자의 창의성에 따라서 무궁무진하다.</p>

  <div class="tip_icon2"></div>

  <div class="tipbox2">
    <p class="txt gothic_m">이 책에서는 힘 제어, 포스(Force)라는 유사한 의미의 용어가 혼재되어 사용되고 있다. 한글화하는 과정에서 기기에 고정되어 표시되는 명칭과 그것의 사용하는 의미를 전달하는 과정에서 혼재되어 사용되고 있음을 이해하기를 바란다. 적어도 이 책 안에서는 아래의 기준으로 명칭을 사용하였다.</p>

    <p class="txt number_list ml15 gothic_m">1. ‘사용하는 실제 용도’를 표현하기 위해서 한글인 ‘힘 제어’를 사용하였다.</p>

    <p class="txt number_list ml15 gothic_m">2. ‘기기의 조작’을 할 때 버튼의 이름 등은 기기 내부에서 실제 표시되는 명령어 명칭에 맞추어 작성 하였다. 이것을 ‘힘 혹은 힘제어’로 억지로 한글화하여 사용하면 오히려 학습자의 혼란을 유발할 수 있다는 판단 때문이다.</p>
  </div>

  <div class="w80 img_center">
    <img alt="part12-p255-img" src="../Images/part12-p255-img.jpg"/>
  </div>

  <div class="w80 img_center flex_column">
    <img alt="part12-p255-img2" src="../Images/part12-p255-img2.jpg"/> 

    <p class="imgcaption"><span class="gothic_b dblue">&#60;그림 Ⅻ-2&#62;</span> 힘 제어를 사용할 수 있는 다양한 산업 활용 예시</p>
  </div>

  <p class="txt indent1">이러한 기능은 &#60;그림 XII-3&#62;과 같이 로봇의 끝단에 장착된 힘 센서에서 얻어지는 정보를 피드백하여 로봇의 동작에 적절히 활용함으로써 가능해진다. 유니버설 로봇사의 예를 들면 E 시리즈<span class="bracket">(&#60;그림 XII-3&#62; 우측)</span>의 로봇은 손목3에 내장된 힘/토크<span class="bracket">(Force/Torque)</span> 센서를 가지고 있으며, 혹은 외부의 센서<span class="bracket">(&#60;그림 XII-3&#62; 좌측)</span>를 추가하여 활용할 수도 있다.</p>

  <div class="w100 img_center flex_column">
    <img alt="part12-p256-img" src="../Images/part12-p256-img.jpg"/> 

    <p class="imgcaption"><span class="gothic_b dblue">&#60;그림 Ⅻ-3&#62;</span> 협동로봇의 힘/토크 센서 적용</p>
  </div>

  <h3 class="section gothic_b f115" id="sigil_toc_id_60"><span class="txtball dwhite">나</span> 포스 템플릿 활용</h3>

  <p class="txt indent1">힘 센서가 있다고 하더라도 이것을 우리가 흔히 사용하는 폴리싱 기능을 구현하는 것은 일반 사용자에게는 생각처럼 간단한 일은 아니다. 생각을 해 보자. 이것을 실제 구현하기 위해서는 힘/토크 센서에서 정보를 적당한 시간 간격으로 가져오고, 그 값을 이용하여 현재 TCP의 위치 혹은 조인트 모터의 회전을 제어할 정보를 연산하여 적용해야 할 것이다. 사용자는 그 정보를 어떻게 가져올지, 시간 간격은 어떻게 하면 좋을지, 연산은 어떻게 해야 하는지, 연산에서 얻어진 결과는 어떻게 적용해야 할 지 등 고려해야 할 요소가 너무 많다. 이것들은 로봇의 특성에 따라 또 최적화해야 할 것이다. 일반적인 사용자가 간단히 할 수 있는 프로그래밍은 아니다. 로봇 플랫폼 기업들, 즉 유니버설로봇과 같은 협동로봇 제작사는 로봇을 누구나 쉽게 사용할 수 있도록 일부 기능들을 ‘템플릿’이란 형태로 제공한다. 템플릿은 자주 사용하는 응용 동작을 일반인들이 쉽게 구현할 수 있도록 전문 프로그래머가 명령어들은 조합하여 반 정도 완성된 모듈 프로그램이며, 사용자는 사용하고자 하는 응용에 필요한 일부 변경점만 수정하여 사용할 수 있다. 파워포인트의 템플릿, 엑셀의 템플릿 등을 왜 사용하는지를 생각해 보면 그 의미가 좀 더 쉽게 이해될 것이다.</p>

  <p class="txt indent1">포스 기능은 &#60;그림 XII-4&#62; (a)와 같이 ‘프로그램 탭-템플릿-포스’를 선택한다. &#60;그림 XII-4&#62; (a) ③ 영역의 로봇프로그램 내에 ‘포스’ 템플릿이 추가된다. 포스 템플릿의 구조는 매우 간단하다. 단 2줄로 구성되어 있는데, 첫 번째 줄의 ‘포스’에서는 내부 동작 코드가 작동하는 동안 작동할 힘의 방향과 세기를 설정할 수 있다. 두 번째 줄의 공간은 ‘포스’ 상태에서 동작할 모든 동작이 정의되는데, 기다림, 이동, 그리퍼 등 어떤 동작도 가능하다. ‘포스’ 상태는 포스 템플릿의 내부 동작이 완료될 때까지 유지된다. 포스를 선택하면 우측 명령어 탭에서 포스를 위한 기본 설정이 가능하다. &#60;그림 XII-4&#62; (a) ④ 영역에서 특징을 누르면 ‘포스’가 가해지는 방향 축을 설정할 수 있다. 그림과 같이 ‘Base 조인트’가 선택되어 있다면 Base 좌표계의 Z축 방향으로 힘이 가해진다. 그 아래로 위치한 ‘포스’의 입력창에는 뉴턴(N) 단위로 가해주고자 하는 힘 값을 입력할 수 있다. 그림과 같이 Base 조인트로 3을 입력했다면, 위쪽<span class="bracket">(Base 좌표의 +z축)</span>으로 3N의 힘을 받아 상승 동작을 하게 된다. 실제 검증을 위해서 &#60;그림 XII-4&#62; (a) ⑤의 테스트를 누른 상태로 티치 팬던트의 프리드라이브 버튼을 누르면 툴이 올라감을 확인할 수 있다. 만약 아래로 내려가도록 힘을 주고 싶다면 포스 입력창에 ‘-3’을 입력하면 된다.</p>

  <div class="tip_icon3"></div>

  <div class="tipbox3">
    <p class="txt gothic_m">포스 기능을 사용하기 전 적절한 방향으로 힘이 작용하는지, 혹은 그 힘의 크기가 적절한지를 확인하는 과 정이 필요하다. 이때 모든 설정이 끝난 후 반드시 티치 팬던트의 ‘프리드라이브’ 버튼을 누르자. 많은 경우 티 치 팬던트의 ‘테스트’ 버튼을 누르고 동작하지 않아 당황하는 경우가 많다. 티치 팬던트의 ‘프리드라이브’를 누르지 않으면 ‘테스트’되지 않는다.</p>
  </div>

  <p class="txt indent1">프로그램에서 적용을 알아보자. &#60;그림 XII-4&#62; (a) ③의 예에서는 포스 내부 동작으로 ‘5초의 기다림 명령어’가 있다. 이 경우 어떻게 동작할까? 프로그램의 영구반복 동작을 해제하고 실제 실행을 하면 5초간 위쪽으로 올라가게 될 것이다. 만약 이동명령어가 있다면 두 지점 사이를 이동하는 동안 위쪽으로 힘을 받고 있는 듯한 형태로 원래 이동 위치보다 위쪽으로 상승하며 이동하게 될 것이다. &#60;그림 XII-4&#62; (a) ④번 영역에서 특징을 ‘툴’로도 설정할 수도 있는데, 이 옵션으로 선택할 시에는 로봇에 설정되어있는 ‘툴’의 좌표계에 따라서 힘을 가할 수 있다. 베이스 좌표계를 기준으로 움직이는 것만큼이나 툴 좌표계를 사용하는 것도 실무적으로 매우 유용한데, 이는 베이스 좌표계가 고정되어있지만 툴 좌표계는 작업 환경에 맞춰서 사용자가 움직일 수 있기 때문이다. 예를 들어 작업하는 팔레트가 비스듬하게 눕혀져 있는 경우 툴을 그 팔레트에 수직 배치한 다음, 툴 방향으로 움직이게 하는 등은 매우 흔한 실무적인 활용 예이다. 기타 사용자 정의의 좌표계가 있다면 그것 역시 선택할 수 있다. &#60;그림 XII-4&#62; (a) ⑥번 영역으로 몇 가지 포스 방향에 따라서 옵션을 선택할 수 있는데, 심플은 Z축 방향, 프레임은 X, Y, Z, RX, RY, RZ를 포함하는 모든 방향, 특정된 한 점을 중심으로 하는 방향 등 보다 다양한 방향으로 힘을 가하는 설정이 가능하다. &#60;그림 XII-4&#62; (b)는 실제 동작을 시켰을 때의 로봇의 이동 사진이다. &#60;그림 XII-4&#62; (a)의 조건에서 TCP 기준 툴이 위쪽으로 올라감을 알 수 있다.</p>

  <div class="w100 img_center flex_column">
    <img alt="part12-p258-img" src="../Images/part12-p258-img.jpg"/>
  </div>

  <div class="w100 img_center flex_column">
    <img alt="part12-p258-img2" src="../Images/part12-p258-img2.jpg"/> 

    <p class="imgcaption"><span class="gothic_b dblue">&#60;그림 Ⅻ-4&#62;</span> 포스 템플릿 활용하기</p>
  </div>

  <h3 class="section gothic_b f115" id="sigil_toc_id_61"><span class="txtball dwhite">다</span> 포스와 함께 사용하는 스크립트</h3>

  <p class="txt indent1">포스 기능을 바르게 사용하기 위해서는 센서의 교정<span class="본문_단어_색변경-각주-9-5-20 CharOverride-13">(Calibration)</span> 및 포스 기능 해제를 위한 두 가지 스크립트를 함께 사용해야 한다. 여기서 교정은 센서에서 나오는 신호의 기준치<span class="본문_단어_색변경-각주-9-5-20 CharOverride-13">(<span class="본문_단어_색변경-각주-9-20-kor CharOverride-15">가장 흔하게는</span></span><span class="본문_단어_색변경-각주-9-5-20 CharOverride-13"> 0)</span>를 초기화하는 것이다. 일반적으로 센서는 온도, 빛, 습도, 열 등 여러 주변 환경 요소 및 센서 자체의 열화 특성 등으로 같은 조건에도 다른 출력을 낼 수 있다. 교정은 현재의 환경 기준으로 출력값을 재조정하는 과정이다.</p>

  <p class="txt indent1">스크립트는 텍스트 기반의 명령어로 폴리스코프의 주요 프로그래밍 방법인 블록코딩으로 제공하지 않는 다양한 내부 명령어를 사용할 수 있다. 실제로 폴리스코프 클릭으로 사용하는 블록 명령어는 프로그래밍 비전공자들이 로봇 프로그램을 하는데 어려움을 줄여 주기 위해서 스크립트 명령어를 편리하게 클릭하여 사용할 수 있도록 제공하는 사용자 인터페이스(User Interface)이다. 다만 이렇게 블록 명령어로 모든 명령어로 제공하기에는 화면 구성 측면에서 공간 한계가 있어서 비교적 사용 빈도가 높은 명령어 위주로 기능을 제공하고, 간헐적으로 사용되는 명령어들은 스크립트를 사용할 수 있도록 기능을 제공하고 있다.</p>

  <p class="txt indent1">내부 압력센서의 교정을 위한 스크립트 명령어는 ‘zero_ftsensor()’이며, 포스 모드의 강제 해제 명령어는 ‘end_force_mode()’이다. 이 명령어에 대한 자세한 설명은 UR 스크립트 매뉴얼을 통해서 확인할 수 있다. 포스 모드를 사용할 때 활용하는 이 명령어들은 폴리스코프의 버튼 메뉴로는 제공되지 않으므로, 필요하다면 직접 텍스트 입력을 해 주어야 한다. 이때 사용하는 메뉴가 &#60;그림 XII-5&#62; <span class="bracket">(a)</span>와 같이 ‘프로그램 탭–고급-스크립트’ 명령어이다. 누르면 &#60;그림 XII-5&#62; <span class="bracket">(a)</span> ③과 같이 사용자가 작성할 수 있는 공간이 생기는데, &#60;그림 XII-5&#62; <span class="bracket">(a)</span> ④를 클릭해서 우리가 원하는 명령어를 직접 작성할 수 있다.</p>

  <p class="txt indent1">‘zero_ftsensor()’를 사용할 때 특별히 주의할 점이 있다. 첫 번째로 센서값을 실제로 읽기 시작하는 시점을 기준으로 최대한 직전에 실행시켜주는 것이 좋다. 센서의 일반적인 특성으로 교정과 실제 측정 간의 시간이 벌어지면 벌어질수록 그 값은 부정확해진다. 두 번째로 이 명령어를 실행하는 시점 전후에는 로봇이 물리적으로 안정<span class="bracket">(Stable)</span>한 조건이 될 수 있도록 ‘기다림’ 함수 등을 적절히 사용해 주는 것이 좋다. 예를 들어 이동 동작 종료 직후에 이 명령어를 사용하면 관성에 의한 충격이 내부 압력 센서에 전달될 수 있어, 이 힘이 인해서 오히려 교정값에 오차를 더 만들 수 있다.</p>

  <p class="txt indent1">‘end_force_mode()’는 반드시 만약의 상황을 대비해서 포스 모드의 동작 이후에는 실행시키는 것이 좋다. &#60;그림 XII-5&#62; <span class="bracket">(b)</span>와 <span class="bracket">(c)</span>는 사용자 스크립트 매뉴얼에서 해당 명령어에 대한 설명으로 참조하면 좋겠다.</p>

  <div class="w100 img_center flex_column">
    <img alt="part12-p260-img" src="../Images/part12-p260-img.jpg"/>
  </div>

  <div class="w100 img_center flex_column">
    <img alt="part12-p260-img2" src="../Images/part12-p260-img2.jpg"/> 

    <p class="imgcaption"><span class="gothic_b dblue">&#60;그림 Ⅻ-5&#62;</span> 포스 모드 관련 스크립트 활용하기</p>
  </div>
</body>
</html>