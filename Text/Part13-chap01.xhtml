<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
  <title>1212</title>
  <link href="../Styles/PY_Ebook_Basic_Style.css" type="text/css" rel="stylesheet"/>
</head>

<body>
  <div class="box1 bg1">
    <h2 class="txt2"><span class="dgray1">0</span><span class="dwhite">1 팔레타이징의 이해</span></h2>
  </div>

  <h3 class="section gothic_b f115" id="sigil_toc_id_66"><span class="txtball dwhite">가</span> 팔레타이징의 활용</h3>

  <p class="txt indent1">팔레타이징<span class="bracket">(Palletizing)</span>은 다관절 로봇의 주요 활용 방법 하나이다. &#60;그림 XIII-3&#62; (a)의 팔레트는 지게차 등을 이용하여 물건을 나를 때 안정적으로 옮기기 위해 사용하는 구조물이며, 팔레타이징이라는 용어는 이것으로부터 유래하였다. 대부분의 제조 공정에서 완성된 제품을 이송하는 과정에서 이 팔레트를 사용하게 되는데, 중량의 제품을 순서대로 배치하는 작업은 단순하지만, 반복적으로 이루어지기 때문에 노동자가 꺼리는 작업 중 하나이다. 하지만 로봇으로서는 단순과 반복 조건은 자동화에 매우 유리하다. 이러한 이유로 제조 산업에서 로봇을 사용하기 시작한다면 제일 먼저 적용이 고려되는 응용 분야로 손꼽힌다.</p>

  <div class="w70 img_center flex_column">
    <img alt="part13-p274-img" src="../Images/part13-p274-img.jpg"/> 

    <p class="imgcaption"><span class="gothic_b dblue">&#60;그림 XIII-3&#62;</span> 팔레타이징의 산업 활용 예</p>
  </div>

  <h3 class="section gothic_b f115" id="sigil_toc_id_67"><span class="txtball dwhite">나</span> 팔레타이징 알고리즘</h3>

  <p class="txt indent1">이 작업을 프로그래밍하는 측면에서 살펴보고자. &#60;그림 XIII-4&#62;와 같이 상자의 가로 길이가 20cm, 팔레트의 폭이 1m라고 한다면, 가장 단순하게는 5개의 고정 위치로 이동하는 동작을 통하여 구현할 수 있을 것이다. 이차원으로 확정한다면 총 25개 상자에 대한 25개의 고정 위치 좌표를 교시해야 한다. 이렇게 작성한 프로그램은 혹시나 팔레트의 위치나 제품의 크기가 달라지면 25개의 위치 모두를 수정해야 하는 문제가 발생한다. 고정 위치가 많으면 많을수록 더 복잡해 질 것이다.</p>

  <div class="w80 img_center flex_column">
    <img alt="part13-p275-img" src="../Images/part13-p275-img.jpg"/> 

    <p class="imgcaption"><span class="gothic_b dblue">&#60;그림 XIII-4&#62;</span> 팔레타이징 배치 예시</p>
  </div>

  <p class="txt indent1">상자나 팔레트의 크기를 포함한 여러 조건 변화에 유연하게 대응하기 위해서 알고리즘을 필요하다. 가장 쉬운 방법으로 팔레트의 모서리를 고정된 기준점으로 하여 0cm, 20cm, 40cm, 60cm, 80cm 위치를 계산하고, 이 정보를 활용하는 방법을 생각해 볼 수 있다. 하지만 폴리스코프의 인터페이스 및 기능은 이 정도 수준의 프로그래밍을 하기에 적합하지 않다. 파이썬과 같은 전문화된 텍스트 기반 프로그래밍 언어인 스크립트를 활용하지 않고서는 힘들다. 또한 차원을 확장하여 &#60;그림 XIII-3&#62; (b)와 같이 누적하여 견고하게 상자를 놓기 위해서 지그재그<span class="본문_단어_색변경-각주-9-5-20 CharOverride-13">(Zigzag)</span> 형태로 구현하려고 한다면 프로그래밍 초보자에게는 프로그래밍에 상당한 시간이 필요할 것이고, 어쩌면 불가능할지도 모른다.</p>

  <p class="txt indent1">많은 로봇 제조 기업에서는 프로그래밍에 능숙하지 못한 사용자를 고려하여 해당 기능을 템플릿으로 제공한다. 팔레타이징 템플릿은 앞서 언급한 일련의 위치 계산 등의 기능을 알고리즘으로 구현해 놓은 것이다. 이렇게 함으로써 사용자는 익숙해진다면 10분 이내의 짧은 시간만으로도 현장에서 팔레타이징 동작을 구현할 수 있게 된다. 본 단원에서는 유니버설로봇社의 팔레타이징 기능을 활용하여 상기의 동작이 어떻게 구현할 수 있는지를 알아보려고 한다.</p>
</body>
</html>